definitions:
  caches:
    npm-custom: /root/.npm-cache
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
  steps:
    - step: &build-test        
        name: Build and Test
        caches:
          - node
          - npm-custom
        image: node:10.15.3
        script:
          - export NODE_ENV=test
          - export PORT=5000
          - export MONGO_DB_URI=$MONGO_DB_URI
          - export SWAGGER_SERVER_URL=localhost:5000                 
          - npm config set cache /root/.npm-cache
          - npm install --pure-lockfile
          - sleep 5
          - npm test
        artifacts:
          - coverage/**

    - step: &sonar_scan
        image: naeemark/sonar-scanner:latest
        name: Sonar -> Analyse, Push 
        script:
          - echo "Scanning for SonarCloud"
          - export SONAR_URL=$SONAR_URL
          - export SONAR_TOKEN=$SONAR_TOKEN
          - export SONAR_ANALYSIS_MODE=publish
          - bitbucket-sonar-scanner

    - step: &build_publish_docker_image
        name: Build, Push Docker Image        
        services:
          - docker
        caches:
          - docker
        script:
          - echo "Building and Pushing Docker Image to Heroku"
          - docker build -t $APP_NAME .
          - docker login --username=_ --password=$HEROKU_TOKEN registry.heroku.com
          - docker tag $APP_NAME registry.heroku.com/$APP_NAME/web
          - docker push registry.heroku.com/$APP_NAME/web
          - docker inspect registry.heroku.com/$APP_NAME/web --format={{.Id}} > WEB_DOCKER_IMAGE_ID
        artifacts:
          - WEB_DOCKER_IMAGE_ID

    - step: &deploy_heroku
        name: Deploy to Heroku
        script:
          - echo "Deploy Docker Image to Heroku"
          - export WEB_DOCKER_IMAGE_ID=$(cat WEB_DOCKER_IMAGE_ID)
          - chmod +x ./deploy.sh
          - ./deploy.sh
    

pipelines:
  tags:
    v*:
      - step: *build-test
      - step: *sonar_scan
      - step:
          name: Deploy Production
          trigger: manual
          deployment: production
          script:
            - echo "Deploy Production"
            
      - step: *build_publish_docker_image
      - step: *deploy_heroku
      
  branches:
    master:
      - step: *build-test
      - step: *sonar_scan
      - step:
          name: Deploy Staging
          trigger: manual
          deployment: staging
          script:
            - echo "Deploy Staging"

      - step: *build_publish_docker_image
      - step: *deploy_heroku

    develop:
      - step: *build-test
      - step: *sonar_scan
      - step:
          name: Deploy Test
          deployment: test
          script:
            - echo "Deploy Test"


options:
  docker: true